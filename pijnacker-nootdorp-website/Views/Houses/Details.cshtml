@model House

@{
	ViewData["Title"] = "Details";
}

<div>
	<h1>@Model.Address</h1>
	<hr />
	<p>€@TextUtilities.BeautifyNumber(Model.Price)</p>
	<br />
	<p>Bouwjaar: @Model.BuildYear</p>
	<p>@Model.IndoorArea m² binnen</p>
	<p>@Model.OutdoorArea m² buiten</p>
	<br />
	<h2>Omschrijving</h2>
	<p>@Model.Description</p>
	<br />
	<h2>Structuur</h2>
	@foreach (var storey in Model.Layout.storeys)
	{
		<h3>Storey @storey.level</h3>
		foreach (var room in storey.rooms)
		{
			<p>@room.type.ToString() : @room.amount</p>
		}
		<br />
	}

	@{
		List<int> digits = NumberUtilities.GetDigits(Model.Access);
		House.Accessibility[] values = Enum.GetValues<House.Accessibility>();

		digits.Reverse();

		for (int i = 0; i < values.Length; i++)
		{
			if (i >= digits.Count || digits[i] == 0)
			{
				<p>HEEFT NIET: @values[i].ToString()</p>
			}
			else if (digits[i] == 1)
			{
				<p>HEEFT: @values[i].ToString()</p>
			}
			else
			{
				<p>GEEN DATA OVER @values[i].ToString()</p>
			}
		}
	}
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
    <a href="/cart/add/@Model.Id">Toevoegen aan winkelmandje</a>
</div>
